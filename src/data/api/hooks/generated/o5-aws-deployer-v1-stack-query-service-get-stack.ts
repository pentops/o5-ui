/**
 * @generated by @pentops/jsonapi-jdef-ts-generator (Plugin: NormalizedQueryPlugin) - do not edit */

import { O5AwsDeployerV1StackQueryServiceGetStackResponse, O5AwsDeployerV1StackQueryServiceGetStackGetStackRequest } from '../../../types/generated';
import { o5AwsDeployerV1StackQueryServiceGetStack } from '../../generated';
import { schema } from 'normalizr';
import { o5AwsDeployerV1StackStateEntity } from '../../../entities/generated/o5-aws-deployer-v1-stack-state';
import { useQuery, type UseQueryOptions } from '@tanstack/react-query';
import { usePreloadDataFromNormalizedCache } from '@pentops/normalized-query-cache';

export const o5AwsDeployerV1StackQueryServiceGetStackResponseEntity = new schema.Object<O5AwsDeployerV1StackQueryServiceGetStackResponse>({
  state: o5AwsDeployerV1StackStateEntity,
});
/**
 * @generated by NormalizedQueryPlugin (get /deployer/v1/q/stack/:stackId) */
export function useO5AwsDeployerV1StackQueryServiceGetStack(
  request: O5AwsDeployerV1StackQueryServiceGetStackGetStackRequest | undefined,
  options?: Partial<UseQueryOptions<O5AwsDeployerV1StackQueryServiceGetStackResponse | undefined>>,
) {
  const preloadData = usePreloadDataFromNormalizedCache<O5AwsDeployerV1StackQueryServiceGetStackResponse, 'state'>(
    o5AwsDeployerV1StackQueryServiceGetStackResponseEntity,
    { state: request?.stackId },
  );

  return useQuery({
    queryKey: [o5AwsDeployerV1StackStateEntity.key, request],
    queryFn: async () => o5AwsDeployerV1StackQueryServiceGetStack('', request),
    enabled: Boolean(request?.stackId),
    meta: { normalizationSchema: o5AwsDeployerV1StackQueryServiceGetStackResponseEntity },
    placeholderData: preloadData,
    ...options,
  });
}
