/**
 * @generated by @pentops/jsonapi-jdef-ts-generator (Plugin: NormalizedQueryPlugin) - do not edit */

import { useInfiniteQuery, type UseInfiniteQueryOptions, type InfiniteData, type QueryKey } from '@tanstack/react-query';
import { schema } from 'normalizr';
import { o5DanteV1DeadMessageStateEntity } from '../../../entities/generated/o5-dante-v1-dead-message-state';
import {
  O5DanteV1DeadMessageQueryServiceListDeadMessagesResponse,
  O5DanteV1DeadMessageQueryServiceListDeadMessagesListDeadMessagesRequest,
} from '../../../types/generated';
import { o5DanteV1DeadMessageQueryServiceListDeadMessages } from '../../generated';

export const o5DanteV1DeadMessageQueryServiceListDeadMessagesResponseEntity =
  new schema.Object<O5DanteV1DeadMessageQueryServiceListDeadMessagesResponse>({
    messages: [o5DanteV1DeadMessageStateEntity],
  });
/**
 * @generated by NormalizedQueryPlugin (get /dante/v1/q/messages) */
export function useO5DanteV1DeadMessageQueryServiceListDeadMessages(
  request?: O5DanteV1DeadMessageQueryServiceListDeadMessagesListDeadMessagesRequest | undefined,
  options?: Partial<
    UseInfiniteQueryOptions<
      O5DanteV1DeadMessageQueryServiceListDeadMessagesResponse | undefined,
      Error,
      InfiniteData<O5DanteV1DeadMessageQueryServiceListDeadMessagesResponse | undefined>,
      O5DanteV1DeadMessageQueryServiceListDeadMessagesResponse | undefined,
      QueryKey,
      string | undefined
    >
  >,
) {
  return useInfiniteQuery({
    queryKey: [o5DanteV1DeadMessageStateEntity.key, request],
    queryFn: async ({ pageParam }) =>
      o5DanteV1DeadMessageQueryServiceListDeadMessages('', request ? { ...request, page: pageParam ? { token: pageParam } : undefined } : undefined),
    enabled: true,
    meta: { normalizationSchema: o5DanteV1DeadMessageQueryServiceListDeadMessagesResponseEntity },
    getNextPageParam: (response) => response?.page?.nextToken,
    initialPageParam: undefined,
    ...options,
  });
}
