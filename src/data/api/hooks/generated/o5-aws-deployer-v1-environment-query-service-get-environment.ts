/**
 * @generated by @pentops/jsonapi-jdef-ts-generator (Plugin: NormalizedQueryPlugin) - do not edit */

import { usePreloadDataFromNormalizedCache } from '@pentops/normalized-query-cache';
import { useQuery, type UseQueryOptions } from '@tanstack/react-query';
import { schema } from 'normalizr';
import { o5AwsDeployerV1EnvironmentStateEntity } from '../../../entities/generated/o5-aws-deployer-v1-environment-state';
import {
  O5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponse,
  O5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentGetEnvironmentRequest,
} from '../../../types/generated';
import { o5AwsDeployerV1EnvironmentQueryServiceGetEnvironment } from '../../generated';

export const o5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponseEntity =
  new schema.Object<O5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponse>({
    state: o5AwsDeployerV1EnvironmentStateEntity,
  });
/**
 * @generated by NormalizedQueryPlugin (get /deployer/v1/q/environment/:environmentId) */
export function useO5AwsDeployerV1EnvironmentQueryServiceGetEnvironment(
  request: O5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentGetEnvironmentRequest | undefined,
  options?: Partial<UseQueryOptions<O5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponse | undefined>>,
) {
  const preloadData = usePreloadDataFromNormalizedCache<O5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponse, 'state'>(
    o5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponseEntity,
    { state: request?.environmentId },
  );

  return useQuery({
    queryKey: [o5AwsDeployerV1EnvironmentStateEntity.key, o5AwsDeployerV1EnvironmentStateEntity.getId(request, {}, '')],
    queryFn: async () => o5AwsDeployerV1EnvironmentQueryServiceGetEnvironment('', request),
    enabled: Boolean(request?.environmentId),
    meta: { normalizationSchema: o5AwsDeployerV1EnvironmentQueryServiceGetEnvironmentResponseEntity },
    placeholderData: preloadData,
    ...options,
  });
}
