/**
 * @generated by @pentops/jsonapi-jdef-ts-generator (Plugin: NormalizedQueryPlugin) - do not edit */

import { useMutation, type UseMutationOptions } from '@tanstack/react-query';
import { schema } from 'normalizr';
import { o5AwsDeployerV1ClusterStateEntity } from '../../../entities/generated/o5-aws-deployer-v1-cluster-state';
import {
  O5AwsDeployerV1DeploymentCommandServiceUpsertClusterResponse,
  O5AwsDeployerV1DeploymentCommandServiceUpsertClusterRequest,
} from '../../../types/generated';
import { o5AwsDeployerV1DeploymentCommandServiceUpsertCluster } from '../../generated';

export const o5AwsDeployerV1DeploymentCommandServiceUpsertClusterResponseEntity =
  new schema.Object<O5AwsDeployerV1DeploymentCommandServiceUpsertClusterResponse>({
    state: o5AwsDeployerV1ClusterStateEntity,
  });
/**
 * @generated by NormalizedQueryPlugin (post /deployer/v1/c/clusters/config) */

export function buildO5AwsDeployerV1DeploymentCommandServiceUpsertClusterKey() {
  return ['/o5.aws.deployer.v1.DeploymentCommandService/UpsertCluster'] as const;
}

export function useO5AwsDeployerV1DeploymentCommandServiceUpsertCluster(
  options?: Partial<
    UseMutationOptions<
      O5AwsDeployerV1DeploymentCommandServiceUpsertClusterResponse | undefined,
      Error,
      O5AwsDeployerV1DeploymentCommandServiceUpsertClusterRequest,
      unknown
    >
  >,
) {
  return useMutation({
    mutationKey: buildO5AwsDeployerV1DeploymentCommandServiceUpsertClusterKey(),
    mutationFn: async (request: O5AwsDeployerV1DeploymentCommandServiceUpsertClusterRequest) =>
      o5AwsDeployerV1DeploymentCommandServiceUpsertCluster('', request),
    meta: { normalizationSchema: o5AwsDeployerV1DeploymentCommandServiceUpsertClusterResponseEntity },
    ...options,
  });
}
